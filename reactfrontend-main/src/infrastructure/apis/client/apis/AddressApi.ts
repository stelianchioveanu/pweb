/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AddressDTORequestResponse,
  AddressUpdateDTO,
  RequestResponse,
} from '../models';
import {
    AddressDTORequestResponseFromJSON,
    AddressDTORequestResponseToJSON,
    AddressUpdateDTOFromJSON,
    AddressUpdateDTOToJSON,
    RequestResponseFromJSON,
    RequestResponseToJSON,
} from '../models';

export interface ApiAddressGetAddressUserIdGetRequest {
    userId: string;
}

export interface ApiAddressUpdateAddressPutRequest {
    addressUpdateDTO?: AddressUpdateDTO;
}

/**
 * 
 */
export class AddressApi extends runtime.BaseAPI {

    /**
     */
    async apiAddressGetAddressUserIdGetRaw(requestParameters: ApiAddressGetAddressUserIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AddressDTORequestResponse>> {
        if (requestParameters.userId === null || requestParameters.userId === undefined) {
            throw new runtime.RequiredError('userId','Required parameter requestParameters.userId was null or undefined when calling apiAddressGetAddressUserIdGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/Address/GetAddress/{userId}`.replace(`{${"userId"}}`, encodeURIComponent(String(requestParameters.userId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AddressDTORequestResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiAddressGetAddressUserIdGet(requestParameters: ApiAddressGetAddressUserIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AddressDTORequestResponse> {
        const response = await this.apiAddressGetAddressUserIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiAddressUpdateAddressPutRaw(requestParameters: ApiAddressUpdateAddressPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RequestResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/Address/UpdateAddress`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: AddressUpdateDTOToJSON(requestParameters.addressUpdateDTO),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => RequestResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiAddressUpdateAddressPut(requestParameters: ApiAddressUpdateAddressPutRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RequestResponse> {
        const response = await this.apiAddressUpdateAddressPutRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
